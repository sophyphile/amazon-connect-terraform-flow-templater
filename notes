awsEmail: samii.ansari+flow-templater@hotmail.com

interact:
- authenticate customer
    - vars:
        - select an AWS Cognito user pool - select manually: "select an AWS Cognito user pool"
        - select an AWG Cognito app client - select manually: "select an AWS Cognito app client"
        - Amazon Connect customer profile configuration - input manually: "input a unique identifier for customer profiles"
    - flows: inbound
- call phone number
    - vars: 
        - caller ID number to display: "select a number from instance" 
    - flows: outbound whisper
- create persistent contact association
    - none
    - flows: cq flow
- create task
    - vars:
        - flow: "select a flow to run this task"
        - set references - set manually: "input a reference"
        - use template: "select a template"
    - flows: cq flow
- get customer input
    - vars:
        - dtmf customer prompt - select from prompt library - select a prompt: "input a prompt"
        - dtmf customer prompt - set S3 file path manually: "specify an audio file from an S3 bucket"
        - lex select a bot: "select an existing lex bot"
        - lex alias: "select an existing lex alias"
        - lex select an Alias ARN: "input lex bot alias ARN"
        - lex customer prompt - select from prompt library - select a prompt: "input a prompt"
        - lex customer prompt - set S3 file path manually: "specify an audio file from an S3 bucket"
    - flows: cq flow
- loop prompts
    - vars:
        - audio recording: "select an audio prompt uploaded in Connect"
        - s3 file path: "input an S3 file path for the audio prompt"
    - flows: cq flow
- play prompt
    - vars:
       - select from the prompt library - set manually: "audio prompt uploaded in Connect"
       - s3 file path - set manually: "specify an audio file from an S3 bucket"
    - flows: cq flow
- send message
    - vars:
        - from email address - set manually: "select an email address from instance"
        - use template: "select a template"
    - flows: cq flow
- store customer input
    - vars:
       - select from the prompt library - set manually: "audio prompt uploaded in Connect"
       - s3 file path - set manually: "specify an audio file from an S3 bucket"
       - encrypt entry - set manually - key ID: "input a key ID (from Connect)"
       - encrypt entry - set manually - key: "input a key (.X509 certificate)" 
    - flows: cq flow

set:
- amazon q connect
    - vars: 
        - set manually - Amazon Q Connect domain: "select an Amazon Q Connect domain"
    - flows: cq flow
- contact tags
    - none
    - flows: cq flow
- resume contact
    - none
    - flows: cq flow
- set callback number
    - none
    - flows: cq flow
- set contact attributes
    - none
    - flows: cq flow
- set customer queue flow
    - vars:
        - select flow - set manually: "select a flow"
    - flows: agent transfer
- set disconnect flow
    - vars:
        - select flow - set manually: "select a flow"
    - flows: cq flow
- set event flow
    - vars:
        - select flow - set manually: " select a flow"
    - flows: cq flow
- set hold flow
    - vars:
        - agent - set manually: "select a flow"
        - customer - set manually: "select a flow"
    - flows: cq flow
- set routing criteria
    - vars:
        - set manually - requirement type preferred agent: "select a preferred agent or AGENTS"
    - flows: cq flow
- set voice
    - none
    - flows: cq flow
- set voice ID
    - vars:
        - fraud detection - set manually: "input fraud watchlist ID"
    - flows: cq flow
- set whisper flow
    - vars:
        - to agent - set agent whisper - select manually: "select agent whisper flow"
        - to customer - set customer whisper - select manually: "select customer whisper flow"
    - flows: cq flow
- set working queue
    - vars:
        - set working queue - by queue - manually: "select a queue from instance"
        - set working queue - by agent - manually: "select an agent queue from instance"
    - flows: agent transfer
- change routing priority / age
    - none
    - flows: cq flow

check:
- check call progress
    - none
    - flows: cq flow
- check contact attributes
    - none
    - flows: cq flow
- check hours of operation
    - vars:
        - specific hours - select: "select from instance"
    - flows: cq flow
- check queue status
    - vars:
        - queue to check - by queue - select manually: "select a queue from instance"
        - queue to check - by agent - select manually: "select an agent queue from instance"
    - flows: cq flow
- check staffing
    - vars:
        - queue to check - by queue - select manually: "select a queue from instance"
        - queue to check - by agent - select manually: "select an agent queue from instance"
    - flows: cq flow
- check voice ID
    - none
    - flows: cq flow
- get queue metrics
    - vars:
        - set queue - by queue - select manually: "select a queue from instance"
        - set queue - by agent - select manually: "select an agent queue from instance"
    - flows: cq flow

analyze:
- set logging behaviour
    - none
    - flows: cq flow
- set recording and analytics behaviour
    - none
    - flows: cq flow
- start media streaming
    - none
    - flows: cq flow
- stop media streaming
    - none
    - flows: cq flow



logic:
- distribute by percentage
    - none
    - flows: cq flow
- loop
    - none
    - flows: cq flow
- wait
    - none
    - flows: cq flow

integrate:
- cases
    - vars:
        - template - set manually: "select a template"
        - template - set dynamically: "provide an attribute that refers to a template"
        - case to update (update) - select namespace & key: "case ID"
        - request fields - select (get && update): "select fields and give values to populate case data"
        - response fields - select (get): "select any fields that you want to use in subsequent flow blocks"
    - flows: cq flow
- customer profiles
    - vars: 
        - check segment membership - profile ID - manual: "input Profile ID"
        - check segment membership - segment - manual: "select Segment"
        - check segment membership - segment - dynamic: "provide an attribute that refers to a predefined Segment Definition name"
        - create profile - request fields - use custom attribute - custom attribute - set dynamically: //
        - create profile - request fields - use custom attribute - attribute value - set manually: "attribute value defined according to custom attribute specified above"
        - get profile - search identifier - set manually: //
        - get profile - identifier value - set manually: "identifier value according to the search identifier specified above"
        - update profile - request fields - use custom attribute - custom attribute - set dynamically: //
        - update profile - request fields - use custom attribute - attribute value - set manually: "attribute value defined according to custom attribute specified above"
        - get profile object - profile ID - manual: "input Profile ID"
        - get profile object - search identifier - set manually: //
        - get profile object - identifier value - set manually: "identifier value according to the search identifier specified above"
        - associate contact to profile - profile ID - manual: "input Profile ID"
        - associate contact to profile - contact ID - manual: "input Contact ID"
        - get calculated attributes - profile ID - manual: "input Profile ID"
    - flow: cq flow
- aws lambda function
    - vars: 
        - function ARN - manually: "add a function from instance"
        - function ARN - dynamically: "add a function ARN"
    - flows: cq flow
- invoke module
    - vars: 
        - module name - set manually: "select a module from instance"
    - flows: inbound
- show view
    - vars:
        - version - use version - select manually: "select a version for the view"
        - version - use alias - select/input??: "select/input an alias for the view"
    - flows: inbound
- wait
    - none
    - flows: inbound


terminate:
- disconnect
    - none
    - flows: cq flow
- end flow / resume
    - none
    - flows: cq flow
- return
    - none
    - flows: module
- transfer to agent
    - none
    - flows: agent transfer
- transfer to flow
    - vars:
        - select flow - set manually: "select a flow"
    - flows: agent transfer
- transfer to phone number
    - vars:
        - caller ID number - manually: "select a number from instance"
        - caller ID number - dynamically: "select a number from instance"
    - flows: cq flow
- transfer to queue
    - vars:
        - set working queue - by queue - manually: "select a queue from instance"
        - set working queue - by agent - manually: "select an agent queue from instance"
    - flows: cq flow





